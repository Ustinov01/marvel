{"version":3,"file":"static/js/425.b818a15d.chunk.js","mappings":"oOA6FA,EApFmB,WAEf,IAAAA,GAAkCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAA4CL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAApDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GACxCG,GAA4BT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAAsCb,EAAAA,EAAAA,WAAS,GAAMc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAA9CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAAuCC,EAAAA,EAAAA,KAAhCC,EAAOF,EAAPE,QAASC,EAAKH,EAALG,MAAOC,EAAYJ,EAAZI,cAEvBC,EAAAA,EAAAA,YAAU,WACNC,EAAUZ,GAAQ,EACtB,GAAG,IAIH,IAAMY,EAAY,SAACZ,EAAQa,GACbhB,GAAVgB,GAEAH,EAAaV,GACRc,KAAKC,EACd,EAEMA,EAAoB,SAACC,GACvB,IAAIC,GAAQ,EACRD,EAAaE,OAAS,IACtBD,GAAQ,GAGZxB,GAAa,SAAAD,GAAS,SAAA2B,QAAAC,EAAAA,EAAAA,GAAQ5B,IAAS4B,EAAAA,EAAAA,GAAKJ,GAAY,IACxDnB,GAAkB,GAClBI,GAAU,SAAAD,GAAM,OAAIA,EAAS,CAAC,IAC9BK,EAAeY,EAEnB,EA6BA,IAAMI,EAvBN,SAAqBC,GACjB,IAAMD,EAAQC,EAAIC,KAAI,SAACC,EAAMC,GACzB,OACIC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,eAAcC,UACxBC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,GAAE,WAAAZ,OAAaK,EAAKQ,IAAKJ,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,OAAKO,IAAKT,EAAKU,UAAWC,IAAKX,EAAKY,MAAOT,UAAU,sBACrDD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBC,SAAEJ,EAAKY,SACzCV,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAoBC,SAAEJ,EAAKa,YAJhBZ,EAQ1C,IAEA,OACIC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,eAAcC,SACvBP,GAIb,CAIciB,CAAY9C,GAEpB+C,EAAe9B,GAAQiB,EAAAA,EAAAA,KAACc,EAAAA,EAAY,IAAK,KACzCC,EAAUjC,IAAYZ,GAAiB8B,EAAAA,EAAAA,KAACgB,EAAAA,EAAO,IAAK,KAG1D,OACIb,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,CACxBW,EACAE,EACApB,GAEDK,EAAAA,EAAAA,KAAA,UACIC,UAAU,mCACVgB,SAAU/C,EACVgD,MAAO,CAAC,QAAWxC,EAAc,OAAS,SAC1CyC,QAAS,kBAAMjC,EAAUZ,EAAO,EAAC4B,UACjCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOC,SAAC,kBAIvC,E,oBCvEA,EAhBkB,WACd,OACIC,EAAAA,EAAAA,MAAAiB,EAAAA,SAAA,CAAAlB,SAAA,EACIC,EAAAA,EAAAA,MAACkB,EAAAA,EAAM,CAAAnB,SAAA,EACHF,EAAAA,EAAAA,KAAA,QACIsB,KAAK,cACLC,QAAQ,0BAEZvB,EAAAA,EAAAA,KAAA,SAAAE,SAAO,oBAEXF,EAAAA,EAAAA,KAACwB,EAAAA,EAAS,KACVxB,EAAAA,EAAAA,KAACyB,EAAU,MAGvB,C","sources":["components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './comicsList.scss';\n\n\nconst ComicsList = () => {\n    \n    const [comicList, setComicList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(15);\n    const [comicsEnded, setComicsEnded] = useState(false);\n    const {loading, error, getAllComics} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n\n        getAllComics(offset)\n            .then(onComicListLoaded)\n    }\n\n    const onComicListLoaded = (newComicList) => {\n        let ended = false;\n        if (newComicList.length < 7) {\n            ended = true;\n        }\n\n        setComicList(comicList => [...comicList, ...newComicList]);\n        setNewItemLoading(false);\n        setOffset(offset => offset + 8);\n        setComicsEnded(ended);\n\n    }\n\n\n\n\n\n    function renderItems(arr) {\n        const items = arr.map((item, i) => {\n            return (\n                <li className=\"comics__item\" key={i}>\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        });\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n\n        )\n    }\n\n\n\n    const items = renderItems(comicList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n\n            <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': comicsEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\"\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst ComicPage = () => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Page with our comics\"\r\n                />\r\n                <title>Comics Page</title>\r\n            </Helmet>\r\n            <AppBanner/>\r\n            <ComicsList/>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicPage;"],"names":["_useState","useState","_useState2","_slicedToArray","comicList","setComicList","_useState3","_useState4","newItemLoading","setNewItemLoading","_useState5","_useState6","offset","setOffset","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useMarvelService","loading","error","getAllComics","useEffect","onRequest","initial","then","onComicListLoaded","newComicList","ended","length","concat","_toConsumableArray","items","arr","map","item","i","_jsx","className","children","_jsxs","Link","to","id","src","thumbnail","alt","title","price","renderItems","errorMessage","ErrorMessage","spinner","Spinner","disabled","style","onClick","_Fragment","Helmet","name","content","AppBanner","ComicsList"],"sourceRoot":""}